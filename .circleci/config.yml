version: 2.1
jobs:
  run-tests-job:
    docker:
      - image: circleci/python:3
        environment:
          TEST_DATABASE_URI: ${TEST_DATABASE_URI}
          APP_ENVIRONMENT: "testing"
          SECRET_KEY: ${SECRET_KEY}

      - image: circleci/postgres:9.6-alpine
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: flight_test_db
          POSTGRES_PASSWORD: admin

    working_directory: ~/Flight-Boooking-Application

    steps:
      - checkout
      # - run: # test what branch we're on.
      #     name: "Set Test Database"
      #     command: | 
            

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
        
      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            pytest
          
  deploy-job:
    docker:
      - image: circleci/python:3
        environment:
          DEV_DATABASE_URI: $(DEV_DATABASE_URI)
          APP_ENVIRONMENT: "development"
          SECRET_KEY: ${SECRET_KEY}
             
      - image: circleci/postgres:9.6-alpine
        environment:
          POSTGRES_USER: admin
          POSTGRES_DB: flight_db
          POSTGRES_PASSWORD: admin

    working_directory: ~/Flight-Boooking-Application
    steps:

      - checkout
      - run:
          name: Deploy to Heroku
          command: |  # this command is framework-dependent and may vary
            bash .circleci/setup-heroku.sh 
            heroku git:remote -a $HEROKU_APP_NAME
            git push --force https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master
            sleep 5  # sleep for 5 seconds to wait for dynos
            heroku restart
workflows:
  version: 2.1
  build-deploy:
    jobs:
      - run-tests-job
      - deploy-job:  # only deploy when develop successfully builds
          requires:
            - run-tests-job
          filters:
            branches:
              only: master
